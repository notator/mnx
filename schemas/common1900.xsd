<?xml version="1.0" encoding="utf-8"?>
<xs:schema targetNamespace="https://github.com/w3c/mnx"
    elementFormDefault="qualified"
    xmlns="https://github.com/w3c/mnx"
    xmlns:xs="http://www.w3.org/2001/XMLSchema" >
    <xs:annotation>
        <!--xs:documentation xml:lang="en"-->
        <xs:documentation>
            ******************************************************
            *  MNX Schema (.mnx files)                           *
            *                                                    *
            *  Licensed in accordance with the                   *
            *  W3C COMMUNITY CONTRIBUTOR LICENSE AGREEMENT (CLA) *
            *  https://www.w3.org/community/about/process/cla/   *
            *                                                    *
            ******************************************************
        </xs:documentation>
    </xs:annotation>

    <!--::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::-->
    <!-- mnx: the root element of an .mnx file -->
    <xs:element name="mnx">
        <xs:complexType>
            <xs:sequence>
                <xs:element name="global" type="globalType" maxOccurs="1" minOccurs="1"/>
                <xs:element name="part" type="partType" maxOccurs="unbounded" minOccurs="1"/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>
    
    <!--::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::-->
    <!-- Global Types -->

    <xs:complexType name="globalType">
        <xs:annotation>
            <xs:documentation>
                definition of the &lt;global&gt; element
            </xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:element name="measure" type="globalMeasureType" maxOccurs="unbounded" minOccurs="1"/>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="globalMeasureType">
        <xs:annotation>
            <xs:documentation>
                definition of a global &lt;measure&gt;
            </xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:element name="directions" type="globalMeasureDirectionsType" maxOccurs="1" minOccurs="0"/>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="globalMeasureDirectionsType">
        <xs:annotation>
            <xs:documentation>
                definition of a global measure &lt;directions&gt;
            </xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:element name="time" type="timeSigType" maxOccurs="1" minOccurs="0"/>
            <xs:element name="key" type="keySigType" maxOccurs="1" minOccurs="0"/>
            <xs:element name="repeat" type="repeatType" maxOccurs="unbounded" minOccurs="0"/>
            <xs:element name="ending" type="endingType" maxOccurs="2" minOccurs="0"/>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="timeSigType">
        <xs:attribute name="signature">
            <xs:simpleType>
                <xs:restriction base="multipleNoteValueType" />
            </xs:simpleType>
        </xs:attribute>
    </xs:complexType>

    <xs:complexType name="keySigType">
        <xs:attribute name="fifths">
            <xs:annotation>
                <xs:documentation>
                    An optional '-' or '+' character followed by one or more characters in range [0..9]
                </xs:documentation>
            </xs:annotation>
            <xs:simpleType>
                <xs:restriction base="xs:integer" />
            </xs:simpleType>
        </xs:attribute>
    </xs:complexType>
    
    <xs:complexType name="repeatType">
        <xs:attribute name="type">
            <xs:simpleType>
                <xs:restriction base="xs:string">
                    <xs:pattern value="start|end"/>
                </xs:restriction>
            </xs:simpleType>
        </xs:attribute>
        <xs:attribute name="location">
            <xs:simpleType>
                <xs:restriction base="locationType" />
            </xs:simpleType>
        </xs:attribute>
        <xs:attribute name="times">
            <xs:simpleType>
                <xs:restriction base="xs:string">
                    <xs:pattern value="[1-9][0-9]*" />
                </xs:restriction>                    
            </xs:simpleType>
        </xs:attribute>
    </xs:complexType>
    
    <xs:complexType name="endingType">
        <xs:attribute name="type">
            <xs:simpleType>
                <xs:restriction base="xs:string">
                    <xs:pattern value="start|stop|discontinue"/>
                </xs:restriction>
            </xs:simpleType>
        </xs:attribute>
        <xs:attribute name="number">
            <xs:simpleType>
                <xs:restriction base="xs:string">
                    <xs:pattern value="[1-9][0-9,]*" />
                </xs:restriction>                    
            </xs:simpleType>
        </xs:attribute>
    </xs:complexType>
    
    <!--::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::-->
    <!-- Part Types -->

    <xs:complexType name="partType">
        <xs:annotation>
            <xs:documentation>
                definition of the &lt;part&gt; element
            </xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:element name="part-name" type="xs:string" maxOccurs="1" minOccurs="0"/>
            <xs:element name="part-abbreviation" type="xs:string" maxOccurs="1" minOccurs="0"/>
            <!--<xs:element name="instrument-sound" type="xs:string" maxOccurs="0" minOccurs="0"/> -->
            <xs:element name="measure" type="partMeasureType" maxOccurs="unbounded" minOccurs="1"/>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="partMeasureType">
        <xs:annotation>
            <xs:documentation>
                definition of a global &lt;measure&gt;
            </xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:element name="directions" type="partMeasureDirectionsType" maxOccurs="1" minOccurs="0"/>
            <xs:element name="sequence" type="sequenceType" maxOccurs="unbounded" minOccurs="1"/>
        </xs:sequence>
        <xs:attribute name="barline">
            <xs:simpleType>
                <xs:restriction base="xs:token">
                    <xs:pattern value="regular|dotted|dashed|heavy|light-light|light-heavy|heavy-light|heavy-heavy|tick|short|none"/>
                </xs:restriction>
            </xs:simpleType>
        </xs:attribute>
    </xs:complexType>

    <xs:complexType name="partMeasureDirectionsType">
        <xs:annotation>
            <xs:documentation>
                definition of a part measure &lt;directions&gt;
            </xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:element name="clef" type="clefType" maxOccurs="unbounded" minOccurs="0"/>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="clefType">
        <xs:annotation>
            <xs:documentation>
                Definition of a part measure directions &lt;clef&gt;:
                Attributes:
                sign: One of the values "G", "F", "C", "percussion", "jianpu"
                line: an integer in range [1..9] (restrict to 5?)
                octave: A signed integer
            </xs:documentation>
        </xs:annotation>
        <xs:attribute name="sign">
            <xs:simpleType>
                <xs:restriction base="xs:string">
                    <xs:pattern value="G|F|C|percussion|jianpu"/>
                </xs:restriction>
            </xs:simpleType>
        </xs:attribute>
        <xs:attribute name="line">
            <xs:simpleType>
                <xs:restriction base="xs:string">
                    <xs:pattern value="[1-9]"/>
                </xs:restriction>
            </xs:simpleType>
        </xs:attribute>
        <xs:attribute name="octave">
            <xs:simpleType>
                <xs:restriction base="xs:string">
                    <xs:pattern value="[-]?[0-9]"/>
                </xs:restriction>
            </xs:simpleType>
        </xs:attribute>
    </xs:complexType>

    <xs:complexType name="sequenceType">
        <xs:annotation>
            <xs:documentation>
                definition of a part-measure-sequence
                Issue: there should be some way to avoid the code duplication between sequenceType, tupletType and graceType.
            </xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:choice maxOccurs="unbounded" minOccurs="1">
                <xs:element name="directions" type="sequenceDirectionsType"  maxOccurs="1" minOccurs="1"/>
                <xs:element name="event" type="eventType" maxOccurs="1" minOccurs="1"/>
                <xs:element name="tuplet" type="tupletType" maxOccurs="1" minOccurs="1"/>
                <xs:element name="grace" type="graceType" maxOccurs="1" minOccurs="1"/>
                <xs:element name="beams" type="beamsType" maxOccurs="1" minOccurs="1"/>
            </xs:choice>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="tupletType">
        <xs:annotation>
            <xs:documentation>
                definition of a part-measure-sequence-tuplet
                Issue: there should be some way to avoid the code duplication between sequenceType, tupletType and graceType.
            </xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:choice maxOccurs="unbounded" minOccurs="1">
                <xs:element name="directions" type="sequenceDirectionsType"  maxOccurs="1" minOccurs="0"/>
                <xs:element name="event" type="eventType" maxOccurs="1" minOccurs="1"/>
                <xs:element name="tuplet" type="tupletType" maxOccurs="1" minOccurs="0"/>
                <xs:element name="grace" type="graceType" maxOccurs="1" minOccurs="1"/>
                <!-- I have disallowed a beams element here. j.i. -->            </xs:choice>
        </xs:sequence>
        <xs:attribute name="outer">
            <xs:simpleType>
                <xs:restriction base="multipleNoteValueType" />
            </xs:simpleType>
        </xs:attribute>
        <xs:attribute name="inner">
            <xs:simpleType>
                <xs:restriction base="multipleNoteValueType" />
            </xs:simpleType>
        </xs:attribute>
    </xs:complexType>

    <xs:complexType name="graceType">
        <xs:annotation>
            <xs:documentation>
                definition of a part-measure-sequence-grace
                Issue: there should be some way to avoid the code duplication between sequenceType, tupletType and graceType.
            </xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:choice maxOccurs="unbounded" minOccurs="1">
                <xs:element name="directions" type="sequenceDirectionsType"  maxOccurs="1" minOccurs="0"/>
                <xs:element name="event" type="eventType" maxOccurs="1" minOccurs="1"/>
                <!-- I have disallowed tuplet, grace and beams elements here. j.i. -->
            </xs:choice>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="beamsType">
        <xs:annotation>
            <xs:documentation>
                a list of beams that begin in this part-measure-sequence
            </xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:element name="beam" type="beamType" maxOccurs="unbounded" minOccurs="1"/>            
        </xs:sequence>        
    </xs:complexType>

    <xs:complexType name="beamType">
        <xs:annotation>
            <xs:documentation>
                a beam inside a beams element
            </xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:element name="beam" type="beamType" maxOccurs="unbounded" minOccurs="0"/>
            <xs:element name="beam-hook" type="beamHookType" maxOccurs="2" minOccurs="0"/>
        </xs:sequence>
        <xs:attribute name="events">
            <xs:simpleType>
                <xs:restriction base="locationsListType" />
            </xs:simpleType>
        </xs:attribute>        
    </xs:complexType>

    <xs:complexType name="sequenceDirectionsType">
        <xs:annotation>
            <xs:documentation>
                definition of a part measure &lt;directions&gt;
            </xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:choice maxOccurs="unbounded" minOccurs="0">
                <xs:element name="clef" type="clefType" maxOccurs="unbounded" minOccurs="0"/>
                <xs:element name="octave-shift" type="octaveShiftType" maxOccurs="unbounded" minOccurs="0"/>
            </xs:choice>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="octaveShiftType">
        <xs:annotation>
            <xs:documentation>
                definition of a part measure directions octave-shift
            </xs:documentation>
        </xs:annotation>
        <xs:attribute name="type">
            <xs:simpleType>
                <xs:restriction base="xs:integer" />
            </xs:simpleType>
        </xs:attribute>
        <xs:attribute name="end">
            <xs:simpleType>
                <xs:restriction base="locationType" />
            </xs:simpleType>
        </xs:attribute>        
    </xs:complexType>

    <xs:complexType name="eventType">
        <xs:annotation>
            <xs:documentation>
                definition of a part measure sequence &lt;event&gt;
            </xs:documentation>
        </xs:annotation>
        <xs:choice>
            <xs:choice maxOccurs="unbounded" minOccurs="1">
                <xs:element name="note" type="noteType" maxOccurs="unbounded" minOccurs="1"/>
                <xs:element name="slur" type="slurType" maxOccurs="unbounded" minOccurs="0"/>                
            </xs:choice>
            <xs:element name="rest" maxOccurs="1" minOccurs="1" />            
        </xs:choice>
        <xs:attribute name="value">
            <xs:simpleType>
                <xs:restriction base="noteValueType" />
            </xs:simpleType>
        </xs:attribute>
        <xs:attribute name="id">
            <xs:simpleType>
                <xs:restriction base="idValueType" />
            </xs:simpleType>
        </xs:attribute>
    </xs:complexType>

    <xs:complexType name="noteType">
        <xs:annotation>
            <xs:documentation>
                Definition of a part measure sequence event &lt;note&gt;
            </xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:element name="tied" type="tiedType" maxOccurs="1" minOccurs="0"/>            
        </xs:sequence>
        <xs:attribute name="id">
            <xs:simpleType>
                <xs:restriction base="idValueType" />
            </xs:simpleType>
        </xs:attribute>
        <xs:attribute name="pitch">
            <xs:simpleType>
                <xs:annotation>
                    <xs:documentation>
                        A character in range [A-G], optionally followed by b or bb or # or ##,
                        followed by a character in range [0-9].
                    </xs:documentation>
                </xs:annotation>
                <xs:restriction base="xs:string">
                    <xs:pattern value="[A-G])(b|bb|#|##)?([0-9]"/>
                </xs:restriction>
            </xs:simpleType>
        </xs:attribute>
        <xs:attribute name="accidental">
            <xs:simpleType>
                <xs:annotation>
                    <xs:documentation>
                        One of the values 'flat', 'natural', 'sharp', 'double-sharp', 'flat-flat'
                        (that have been imported from MusicXML).
                        See Issue #184 (Unicode accidentals) 
                    </xs:documentation>
                </xs:annotation>
                <xs:restriction base="xs:string">
                    <xs:pattern value="flat|natural|sharp|double-sharp|flat-flat"/>
                </xs:restriction>
            </xs:simpleType>
        </xs:attribute>
    </xs:complexType>
    
    <xs:complexType name="tiedType">
        <xs:annotation>
            <xs:documentation>
                Definition of a part measure sequence note tied element
            </xs:documentation>
        </xs:annotation>
        <xs:attribute name="target">
            <xs:simpleType>
                <xs:restriction base="idReferenceType" />                    
            </xs:simpleType>
        </xs:attribute>
    </xs:complexType>
    
    <xs:complexType name="slurType">
        <xs:attribute name="side">
            <xs:simpleType>
                <xs:restriction base="xs:string">
                    <xs:pattern value="up|down"/>
                </xs:restriction>
            </xs:simpleType>
        </xs:attribute>
        <xs:attribute name="target">
            <xs:simpleType>
                <xs:restriction base="idReferenceType" />                    
            </xs:simpleType>
        </xs:attribute>
        <xs:attribute name="location">
            <xs:simpleType>
                <xs:restriction base="slurLocationType" />
            </xs:simpleType>
        </xs:attribute>
        <xs:attribute name="start-note">
            <xs:simpleType>
                <xs:restriction base="idReferenceType" />
            </xs:simpleType>
        </xs:attribute>
        <xs:attribute name="end-note">
            <xs:simpleType>
                <xs:restriction base="idReferenceType" />
            </xs:simpleType>
        </xs:attribute>
    </xs:complexType>
    
    <xs:complexType name="beamHookType">
        <xs:annotation>
            <xs:documentation>
                Definition of a part measure sequence beams beam beam-hook
            </xs:documentation>
        </xs:annotation>
        <xs:attribute name="direction">
            <xs:simpleType>
                <xs:annotation>
                    <xs:documentation>
                        One of the values 'left' or 'right'
                    </xs:documentation>
                </xs:annotation>
                <xs:restriction base="xs:string">
                    <xs:pattern value="left|right"/>
                </xs:restriction>
            </xs:simpleType>
        </xs:attribute>
        <xs:attribute name="event">
            <xs:simpleType>
                <xs:annotation>
                    <xs:documentation>
                        The location of the event to which this beam-hook is attached. 
                    </xs:documentation>
                </xs:annotation>
                <xs:restriction base="locationType" />
            </xs:simpleType>
        </xs:attribute>
    </xs:complexType>

    <!--::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::-->
    <!-- Simple Types -->

    <xs:simpleType name="multipleNoteValueType">
        <xs:annotation>
            <xs:documentation>
                An integer string that does not begin with 0, but that has an unlimited number of digits,
                followed by a "/" character,
                followed by one of the strings "8L", "4L", "2L", "1", "2", "4", "8", "16", "32", "64", "128", "256", "512", "1024"
                The strings "8L" "4L" and "2L" denote maxima, long and breve noteValues respectively.
                (See MusicXML's note-value-type, that extends from maxima to 1024th note.)
            </xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
            <xs:pattern value="([1-9][0-9]*)/(8L|4L|2L|1|2|4|8|16|32|64|128|256|512|1024)"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="noteValueType">
        <xs:annotation>
            <xs:documentation>
                An integer string that is
                an optional '1' character
                followed by a compulsory "/" character,
                followed by one of the strings "8L", "4L", "2L", "1", "2", "4", "8", "16", "32", "64", "128", "256", "512", "1024"
                followed by zero or more 'd' characters
                The strings "8L" "4L" and "2L" denote maxima, long and breve noteValues respectively.
                (See MusicXML's note-value-type, that extends from maxima to 1024th note.)
            </xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
            <xs:pattern value="(1)?/(8L|4L|2L|1|2|4|8|16|32|64|128|256|512|1024)(d*)"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="simpleLocationType">
        <xs:annotation>
            <xs:documentation>
                An optional (measure number followed by a ':' character) followed by
                EITHER
                { a decimal floating-point number indicating the positive number of whole-notes after the start of the measure }
                OR
                { a multipleNoteValueType (2/4, 3/8, 4/2 6/1d etc.}
            </xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
            <xs:pattern value="(([1-9][0-9]*):)?(([0-9]*.)?([0-9]*)|([1-9][0-9]*)?/(8L|4L|2L|1|2|4|8|16|32|64|128|256|512|1024)(d*))"/>
        </xs:restriction>
    </xs:simpleType>
    
    <xs:simpleType name="locationType">
        <xs:annotation>
            <xs:documentation>
                EITHER
                { a reference to an ID (these consist of a '#' character, followed by arbitrary alphanumeric characters) }
                OR
                { an optional (measure number followed by a ':' character) followed by
                    EITHER
                    { a decimal floating-point number indicating the positive number of whole-notes after the start of the measure }
                    OR
                    { a multipleNoteValueType (2/4, 3/8, 4/2 6/1d etc.}
                }
                TODO: redefine this as a union of idReferenceType and a simpleLocationType
            </xs:documentation>
        </xs:annotation>
        <xs:union memberTypes="idReferenceType simpleLocationType" />
    </xs:simpleType>
    
    <xs:simpleType name="incomingOutgoingType">
        <xs:annotation>
            <xs:documentation>
                Part of the slurLocationType
            </xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
            <xs:pattern value="incoming|outgoing"/>
        </xs:restriction>
    </xs:simpleType>
    
    <xs:simpleType name="slurLocationType">
        <xs:annotation>
            <xs:documentation>
                the value of the slur.location attribute
            </xs:documentation>
        </xs:annotation>
        <xs:union memberTypes="locationType incomingOutgoingType" />
    </xs:simpleType>    

    <xs:simpleType name="locationsListType">
        <xs:annotation>
            <xs:documentation>
                A string containing a list of locationTypes separated by whitespace
                Issue: this regex allows ID references without an initial '#' character (needs more testing)
            </xs:documentation>
        </xs:annotation>
        <xs:list itemType="locationType" />       
    </xs:simpleType>

    <xs:simpleType name="idValueType">
        <xs:annotation>
            <xs:documentation>
                A string beginning with a character in range [a-z] or [A-Z]
                followed by an arbitrary number of characters from [a-z], [A-Z], [0-9], '-' (minus), or '_' (underscore).
            </xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
            <xs:pattern value="[a-zA-Z][a-zA-Z0-9\-_]*" />
        </xs:restriction>
    </xs:simpleType>
        
    <xs:simpleType name="idReferenceType">
        <xs:annotation>
            <xs:documentation>
                A string beginning with a '#' character
                followed by an idValueType
            </xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
            <xs:pattern value="[#][a-zA-Z][a-zA-Z0-9\-_]*" />
        </xs:restriction>
    </xs:simpleType>
    
</xs:schema>
