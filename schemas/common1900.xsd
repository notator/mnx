<?xml version="1.0" encoding="utf-8"?>
<xs:schema targetNamespace="https://github.com/w3c/mnx"
    elementFormDefault="qualified"
    xmlns="https://github.com/w3c/mnx"
    xmlns:xs="http://www.w3.org/2001/XMLSchema" >
    <xs:annotation>
        <!--xs:documentation xml:lang="en"-->
        <xs:documentation>
            **************************************************************
            *  common1900.xsd:                                           *
            *  Draft MNX common1900 Schema (.mnx file)                   *
            *                                                            *
            *  N.B.: This Schema is an evolving draft, that validates    *
            *  an expanding set of MNX common1900 Example files.         *
            *  It will change in future, as new example files are added, *
            *  leading to the creation of new complexTypes, simpleTypes  *
            *  and elements. It will also change as part of the drive    *
            *  to accomodate new, related schemas.                       *
            *  Suggestions for new examples and/or changes or            *
            *  improvements to this Schema would be very welcome.        *
            *                                                            *
            *  Author(s): James Ingram...                                *
            *                                                            *
            *  Licensed in accordance with the                           *
            *  W3C COMMUNITY CONTRIBUTOR LICENSE AGREEMENT (CLA)         *
            *  https://www.w3.org/community/about/process/cla/           *
            *  Contributors must be members of the W3C Music Notation    *
            *  Community Notation Group:                                 *
            *  https://www.w3.org/community/music-notation/              *
            *  and so have already signed the above licence.             *
            *                                                            *
            **************************************************************
        </xs:documentation>
    </xs:annotation>

    <!--::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::-->
    <!-- mnx: the root element of an .mnx file -->
    <xs:element name="mnx">
        <xs:annotation>
            <xs:documentation>
                the root element of an .mnx file
                Issue1: The Draft Spec says that there can be more than one global element
                (enclosed in a globals element).
                That does not seem necessary in this common1900 schema.
                Issue2: should the part elements be enclosed in a parts element?
            </xs:documentation>
        </xs:annotation>
        <xs:complexType>
            <xs:sequence>
                <xs:element name="global" type="globalType" maxOccurs="1" minOccurs="1"/>
                <xs:element name="part" type="partType" maxOccurs="unbounded" minOccurs="1"/>
                <xs:element name="systemLayouts" type="systemLayoutsType" maxOccurs="1" minOccurs="0"/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>
    
    <!--::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::-->
    <!-- Global Types -->
    <xs:complexType name="globalType">
        <xs:annotation>
            <xs:documentation>
                the global element
            </xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:element name="measure" type="globalMeasureType" maxOccurs="unbounded" minOccurs="1"/>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="globalMeasureType">
        <xs:annotation>
            <xs:documentation>
                the global/measure element
            </xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:element name="directions" type="globalMeasureDirectionsType" maxOccurs="1" minOccurs="0"/>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="globalMeasureDirectionsType">
        <xs:annotation>
            <xs:documentation>
                the global/measure/directions element
            </xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:choice minOccurs="0" maxOccurs="unbounded" >
                <xs:element name="time" type="timeSigType" maxOccurs="1" minOccurs="0"/>
                <xs:element name="key" type="keySigType" maxOccurs="1" minOccurs="0"/>
                <xs:element name="repeat" type="repeatType" maxOccurs="unbounded" minOccurs="0"/>
                <xs:element name="ending" type="endingType" maxOccurs="2" minOccurs="0"/>
                <xs:element name="instrSections" type="instrSectionsType" maxOccurs="1" minOccurs="0"/>
            </xs:choice>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="timeSigType">
        <xs:annotation>
            <xs:documentation>
                the global/measure/directions/timeSig element
            </xs:documentation>
        </xs:annotation>
        <xs:attribute name="signature" use="required">
            <xs:simpleType>
                <xs:restriction base="multipleNoteValueType" />
            </xs:simpleType>
        </xs:attribute>
    </xs:complexType>

    <xs:complexType name="keySigType">
        <xs:annotation>
            <xs:documentation>
                the global/measure/directions/keySig element
            </xs:documentation>
        </xs:annotation>
        <xs:attribute name="fifths" use="required">
            <xs:annotation>
                <xs:documentation>
                    An optional '-' or '+' character followed by one or more characters in range [0..9]
                </xs:documentation>
            </xs:annotation>
            <xs:simpleType>
                <xs:restriction base="xs:integer" />
            </xs:simpleType>
        </xs:attribute>
    </xs:complexType>
    
    <xs:complexType name="repeatType">
        <xs:annotation>
            <xs:documentation>
                the global/measure/directions/repeat element
            </xs:documentation>
        </xs:annotation>
        <xs:attribute name="type" use="required">
            <xs:simpleType>
                <xs:restriction base="xs:token">
                    <xs:pattern value="start|end"/>
                </xs:restriction>
            </xs:simpleType>
        </xs:attribute>
        <xs:attribute name="location">
            <xs:simpleType>
                <xs:restriction base="locationType" />
            </xs:simpleType>
        </xs:attribute>
        <xs:attribute name="times">
            <xs:simpleType>
                <xs:restriction base="xs:positiveInteger" />                   
            </xs:simpleType>
        </xs:attribute>
    </xs:complexType>

    <xs:complexType name="endingType">
        <xs:annotation>
            <xs:documentation>
                the global/measure/directions/ending element
            </xs:documentation>
        </xs:annotation>
        <xs:attribute name="type" use="required">
            <xs:simpleType>
                <xs:restriction base="xs:token">
                    <xs:pattern value="start|stop|discontinue"/>
                </xs:restriction>
            </xs:simpleType>
        </xs:attribute>
        <xs:attribute name="number">
            <xs:simpleType>
                <xs:restriction base="xs:token">
                    <xs:pattern value="[1-9,\.]*" />
                </xs:restriction>
            </xs:simpleType>
        </xs:attribute>
    </xs:complexType>

    <xs:complexType name="instrSectionsType">
        <xs:annotation>
            <xs:documentation>
                the global/measure/directions/instrSections element
            </xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:element name="instrSection" type="instrSectionType" maxOccurs="unbounded" minOccurs="1"/>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="instrSectionType">
        <xs:annotation>
            <xs:documentation>
                the global/measure/directions/instrSection element
            </xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:element name="partGroup" type="partGroupType" maxOccurs="unbounded" minOccurs="1"/>
        </xs:sequence>
        <xs:attribute name="name">
            <xs:simpleType>
                <xs:restriction base="xs:token" />
            </xs:simpleType>
        </xs:attribute>
    </xs:complexType>

    <xs:complexType name="partGroupType">
        <xs:annotation>
            <xs:documentation>
                the global/measure/directions/instrSection/partGroup element
            </xs:documentation>
        </xs:annotation>
        <xs:attribute name="name" use="required">
            <xs:simpleType>
                <xs:restriction base="xs:token" />
            </xs:simpleType>
        </xs:attribute>
        <xs:attribute name="abbreviatedBasename">
            <xs:simpleType>
                <xs:restriction base="xs:token" />
            </xs:simpleType>
        </xs:attribute>
    </xs:complexType>
    
    <!--::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::-->
    <!-- Part Types -->

    <xs:complexType name="partType">
        <xs:annotation>
            <xs:documentation>
                the part element
                Issue: I'm using baseName, abbreviatedBasename and partNumberInGroup attributes here
                instead of MusicXML's part-name and part-abbreviation elements. 
                The MusicXML instrument-sound element has not (yet) been defined here.
            </xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:element name="part-name" type="xs:token" maxOccurs="1" minOccurs="0"/>
            <xs:element name="measure" type="partMeasureType" maxOccurs="unbounded" minOccurs="1"/>
        </xs:sequence>
        <xs:attribute name="id">
            <xs:simpleType>
                <xs:restriction base="idValueType" />
            </xs:simpleType>
        </xs:attribute>
        <xs:attribute name="partGroup">
            <xs:annotation>
                <xs:documentation>
                    This string will be printed followed by the number-in-section (if any)
                    (e.g. if basename=Flute, part-number="1", Flute 1 will be printed on the booklet.)
                    Used on the front of the part's booklet, and to the left of the score's first system.
                </xs:documentation>
            </xs:annotation>
            <xs:simpleType>
                <xs:restriction base="xs:token"/>
            </xs:simpleType>
        </xs:attribute>
        <xs:attribute name="abbreviatedBasename">
             <xs:annotation>
                <xs:documentation>
                    The string that is used in the score from system 2 onwards
                    EITHER concatenated before a part-number
                           and printed to the left of a staff that is only used by this part.
                    OR printed, vertically centred, to the left of a brace that encloses parts
                           having the same part-abbreviation-root.
                    (e.g. Fl.)
                </xs:documentation>
            </xs:annotation>
            <xs:simpleType>
                <xs:restriction base="xs:token"/>
            </xs:simpleType>
        </xs:attribute>
        <xs:attribute name="partNumberInGroup">
             <xs:annotation>
                <xs:documentation>
                    The part's number in the group (optional).
                    This attribute can be omitted if there is only one part having this basename.
                    This value can either be concatenated, after a space, to the basename
                    or abbreviatedBasename
                    or used on its own, centred above othe partNumbers, in front of staves
                    containing more than one part.
                </xs:documentation>
            </xs:annotation>
            <xs:simpleType>
                <xs:restriction base="xs:positiveInteger" />
            </xs:simpleType>
        </xs:attribute>
    </xs:complexType>

    <xs:complexType name="partMeasureType">
        <xs:annotation>
            <xs:documentation>
                the part/measure element
            </xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:element name="directions" type="partMeasureDirectionsType" maxOccurs="1" minOccurs="0"/>
            <xs:element name="sequence" type="sequenceType" maxOccurs="unbounded" minOccurs="1"/>
        </xs:sequence>
        <xs:attribute name="barline" default="regular">
            <xs:simpleType>
                <xs:restriction base="xs:token">
                    <xs:pattern value="regular|dotted|dashed|heavy|light-light|light-heavy|heavy-light|heavy-heavy|tick|short|none"/>
                </xs:restriction>
            </xs:simpleType>
        </xs:attribute>
    </xs:complexType>

    <xs:complexType name="partMeasureDirectionsType">
        <xs:annotation>
            <xs:documentation>
                the part/measure/directions element
            </xs:documentation>
        </xs:annotation>
        <xs:choice maxOccurs="unbounded" minOccurs="0">
            <xs:element name="clef" type="clefType" />
            <xs:element name="text" type="textType" />
        </xs:choice>
    </xs:complexType>

    <xs:complexType name="clefType">
        <xs:annotation>
            <xs:documentation>
                the part/measure/directions/clef element
            </xs:documentation>
        </xs:annotation>
        <xs:attribute name="sign" use="required">
            <xs:simpleType>
                <xs:restriction base="xs:token">
                    <xs:pattern value="G|F|C|percussion|jianpu"/>
                </xs:restriction>
            </xs:simpleType>
        </xs:attribute>
        <xs:attribute name="line" use="required">
            <xs:simpleType>
                <xs:restriction base="xs:token">
                    <xs:pattern value="[1-9]"/>
                </xs:restriction>
            </xs:simpleType>
        </xs:attribute>
        <xs:attribute name="octave" default="0">
            <xs:simpleType>
                <xs:restriction base="xs:int">
                    <xs:minInclusive value="-4" />
                    <xs:maxInclusive value="4" />
                </xs:restriction>
            </xs:simpleType>
        </xs:attribute>
    </xs:complexType>

    <xs:complexType name="textType">
        <xs:annotation>
            <xs:documentation>
                the part/measure/directions/text element
            </xs:documentation>
        </xs:annotation>
        <xs:attribute name="location">
            <xs:simpleType>
                <xs:restriction base="locationType"/>
            </xs:simpleType>
        </xs:attribute>
        <xs:attribute name="text">
            <xs:simpleType>
                <xs:restriction base="xs:token" />
            </xs:simpleType>
        </xs:attribute>
        <xs:attribute name="align" default="left">
            <xs:annotation>
                <xs:documentation>
                    Issue: I (ji) am currently assuming that:
                    If align has one of the values 'left', 'right' or 'centre', the text will be aligned
                    to the event whose location is given by the location attribute.
                    If align has one of the values 'barlineLeft', 'barlineRight' or 'barlineCentre', the
                    text will be aligned to the barline at the beginning of the measure, and the location
                    attribute will be ignored.
                    Is that okay?
                </xs:documentation>
            </xs:annotation>
            <xs:simpleType>
                <xs:restriction base="xs:token">
                    <xs:pattern value="left|right|center|barlineLeft|barlineRight|barlineCenter"/>
                </xs:restriction>
            </xs:simpleType>
        </xs:attribute>
    </xs:complexType>

    <xs:complexType name="sequenceType">
        <xs:annotation>
            <xs:documentation>
                the part/measure/sequence element
                Issue: is there a way to avoid the code duplication between sequenceType, tupletType and graceType?
            </xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:choice maxOccurs="unbounded" minOccurs="1">
                <xs:element name="directions" type="sequenceDirectionsType" />
                <xs:element name="event" type="eventType" />
                <xs:element name="tuplet" type="tupletType" />
                <xs:element name="grace" type="graceType" />
                <xs:element name="beams" type="beamsType" />
            </xs:choice>
        </xs:sequence>
        <xs:attribute name="staff">
            <xs:annotation>
                <xs:documentation>
                    
                </xs:documentation>
            </xs:annotation>
            <xs:simpleType>
                <xs:restriction base="xs:positiveInteger" />           
            </xs:simpleType>
        </xs:attribute>
    </xs:complexType>

    <xs:complexType name="sequenceDirectionsType">
        <xs:annotation>
            <xs:documentation>
                the part/measure/sequence/directions element
            </xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:choice maxOccurs="unbounded" minOccurs="0">
                <xs:element name="clef" type="clefType" />
                <xs:element name="octave-shift" type="octaveShiftType" />
            </xs:choice>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="tupletType">
        <xs:annotation>
            <xs:documentation>
                the part/measure/sequence/tuplet element (recursive)
            </xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:choice maxOccurs="unbounded" minOccurs="1">
                <xs:element name="directions" type="sequenceDirectionsType" />
                <xs:element name="event" type="eventType" />
                <xs:element name="tuplet" type="tupletType" />
                <xs:element name="grace" type="graceType" />
                <!-- beams are not allowed here. j.i. -->
            </xs:choice>
        </xs:sequence>
        <xs:attribute name="outer" use="required">
            <xs:simpleType>
                <xs:restriction base="multipleNoteValueType" />
            </xs:simpleType>
        </xs:attribute>
        <xs:attribute name="inner" use="required">
            <xs:simpleType>
                <xs:restriction base="multipleNoteValueType" />
            </xs:simpleType>
        </xs:attribute>
    </xs:complexType>

    <xs:complexType name="graceType">
        <xs:annotation>
            <xs:documentation>
                the part/measure/sequence/grace element
            </xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:choice maxOccurs="unbounded" minOccurs="1">
                <xs:element name="directions" type="sequenceDirectionsType" />
                <xs:element name="event" type="eventType" />
                <!-- tuplet, grace and beams elements are not allowed here. j.i. -->
            </xs:choice>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="beamsType">
        <xs:annotation>
            <xs:documentation>
                the part/measure/sequence/beams element
                (contains a list of the beam elements that begin in this part-measure-sequence)
            </xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:element name="beam" type="beamType" maxOccurs="unbounded" minOccurs="1"/>            
        </xs:sequence>        
    </xs:complexType>

    <xs:complexType name="beamType">
        <xs:annotation>
            <xs:documentation>
                the part/measure/sequence/beams/beam element
            </xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:element name="beam" type="beamType" maxOccurs="unbounded" minOccurs="0"/>
            <xs:element name="beam-hook" type="beamHookType" maxOccurs="2" minOccurs="0"/>
        </xs:sequence>
        <xs:attribute name="events" use="required">
            <xs:simpleType>
                <xs:restriction base="locationsListType" />
            </xs:simpleType>
        </xs:attribute>        
    </xs:complexType>

    <xs:complexType name="beamHookType">
        <xs:annotation>
            <xs:documentation>
                the part/measure/sequence/beams/beam/beam-hook element
            </xs:documentation>
        </xs:annotation>
        <xs:attribute name="direction" use="required">
            <xs:simpleType>
                <xs:restriction base="xs:token">
                    <xs:pattern value="left|right"/>
                </xs:restriction>
            </xs:simpleType>
        </xs:attribute>
        <xs:attribute name="event" use="required">
            <xs:simpleType>
                <xs:restriction base="locationType" />
            </xs:simpleType>
        </xs:attribute>
    </xs:complexType>

    <xs:complexType name="octaveShiftType">
        <xs:annotation>
            <xs:documentation>
                the part/measure/sequence/directions/octave-shift element
                Issue: Should this element also be allowed in part/measure/directions ?
            </xs:documentation>
        </xs:annotation>
        <xs:attribute name="type" use="required">
            <xs:simpleType>
                <xs:restriction base="xs:integer" />
            </xs:simpleType>
        </xs:attribute>
        <xs:attribute name="end" use="required">
            <xs:simpleType>
                <xs:restriction base="locationType" />
            </xs:simpleType>
        </xs:attribute>        
    </xs:complexType>

    <xs:complexType name="eventType">
        <xs:annotation>
            <xs:documentation>
                the part/measure/sequence/event element
            </xs:documentation>
        </xs:annotation>
        <xs:choice>
            <xs:choice maxOccurs="unbounded" minOccurs="1">
                <xs:element name="note" type="noteType" />
                <xs:element name="slur" type="slurType" />                
            </xs:choice>
            <xs:element name="rest" type="xs:string" fixed="" />            
        </xs:choice>
        <xs:attribute name="value" use="required">
            <xs:simpleType>
                <xs:restriction base="noteValueType" />
            </xs:simpleType>
        </xs:attribute>
        <xs:attribute name="id">
            <xs:simpleType>
                <xs:restriction base="idValueType" />
            </xs:simpleType>
        </xs:attribute>
        <xs:attribute name="staff">
            <xs:annotation>
                <xs:documentation>
                    
                </xs:documentation>
            </xs:annotation>
            <xs:simpleType>
                <xs:restriction base="xs:positiveInteger" />
            </xs:simpleType>
        </xs:attribute>
    </xs:complexType>

    <xs:complexType name="noteType">
        <xs:annotation>
            <xs:documentation>
                the part/measure/sequence/event/note element
            </xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:element name="tied" type="tiedType" maxOccurs="1" minOccurs="0"/>            
        </xs:sequence>
        <xs:attribute name="id">
            <xs:simpleType>
                <xs:restriction base="idValueType" />
            </xs:simpleType>
        </xs:attribute>
        <xs:attribute name="pitch" use="required">
            <xs:simpleType>
                <xs:annotation>
                    <xs:documentation>
                        A character in range [A-G], optionally followed by b or bb or # or ##,
                        followed by a character in range [0-9].
                    </xs:documentation>
                </xs:annotation>
                <xs:restriction base="xs:token">
                    <xs:pattern value="[A-G])(b|bb|#|##)?([0-9]"/>
                </xs:restriction>
            </xs:simpleType>
        </xs:attribute>
        <xs:attribute name="accidental" default="none">
            <xs:simpleType>
                <xs:annotation>
                    <xs:documentation>
                        The value 'none' or one of the values 'flat', 'natural', 'sharp', 'double-sharp', 'flat-flat'
                        (that have been imported from MusicXML).
                        See Issue #184 (Unicode accidentals)
                        Issue: use doubleSharp and flatFlat to avoid using '-' characters?
                    </xs:documentation>
                </xs:annotation>
                <xs:restriction base="xs:token">
                    <xs:pattern value="none|flat|natural|sharp|double-sharp|flat-flat"/>
                </xs:restriction>
            </xs:simpleType>
        </xs:attribute>
    </xs:complexType>
    
    <xs:complexType name="tiedType">
        <xs:annotation>
            <xs:documentation>
                the part/measure/sequence/event/note/tied element
                Issue: could we rename tied->tie?
                This element is called 'tied' because 'tie' is used for something else in MusicXML,
                but 'tie' would be better in the long run in MNX, because it corresponds to 'slur'.
            </xs:documentation>
        </xs:annotation>
        <xs:attribute name="target" use="required">
            <xs:simpleType>
                <xs:restriction base="idReferenceType" />                    
            </xs:simpleType>
        </xs:attribute>
    </xs:complexType>
    
    <xs:complexType name="slurType">
        <xs:annotation>
            <xs:documentation>
                the part/measure/sequence/event/slur element
            </xs:documentation>
        </xs:annotation>
        <xs:attribute name="side" use="required">
            <xs:simpleType>
                <xs:restriction base="xs:token">
                    <xs:pattern value="up|down"/>
                </xs:restriction>
            </xs:simpleType>
        </xs:attribute>
        <xs:attribute name="target">
            <xs:simpleType>
                <xs:restriction base="idReferenceType" />                    
            </xs:simpleType>
        </xs:attribute>
        <xs:attribute name="location">
            <xs:simpleType>
                <xs:restriction base="slurLocationType" />
            </xs:simpleType>
        </xs:attribute>
        <xs:attribute name="start-note">
            <xs:simpleType>
                <xs:restriction base="idReferenceType" />
            </xs:simpleType>
        </xs:attribute>
        <xs:attribute name="end-note">
            <xs:simpleType>
                <xs:restriction base="idReferenceType" />
            </xs:simpleType>
        </xs:attribute>
    </xs:complexType>

    <!--::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::-->
    <!-- Layout Types -->

    <xs:complexType name="systemLayoutsType">
        <xs:sequence>
            <xs:element name="systemLayout" type="systemLayoutType" maxOccurs="unbounded" minOccurs="1" />
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="systemLayoutType">
        <xs:sequence>
            <xs:element name="staffGroup" type="staffGroupType" maxOccurs="unbounded" minOccurs="1" />
        </xs:sequence>
        <xs:attribute name="id">
            <xs:simpleType>
                <xs:restriction base="idValueType" />
            </xs:simpleType>
        </xs:attribute>
    </xs:complexType>

    <xs:complexType name="staffGroupType">
        <xs:annotation>
            <xs:documentation>
                This element is recursive.
            </xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:choice maxOccurs="unbounded" minOccurs="1">
                <xs:element name="staffGroup" type="staffGroupType" maxOccurs="unbounded" minOccurs="0" />
                <xs:element name="staffGroupStaff" type="staffGroupStaffType" maxOccurs="unbounded" minOccurs="0" />
            </xs:choice>
        </xs:sequence>
        <xs:attribute name="name" use="required">
            <xs:annotation>
                <xs:documentation>
                    This name must match the name of a partGroup
                </xs:documentation>
            </xs:annotation>
            <xs:simpleType>
                <xs:restriction base="xs:token" />
            </xs:simpleType>
        </xs:attribute>
        <xs:attribute name="bracket" use="required">
            <xs:simpleType>
                <xs:restriction base="xs:token">
                    <xs:pattern value="none|curly|straight"/>
                </xs:restriction>
            </xs:simpleType>
        </xs:attribute>
        <xs:attribute name="barline" use="required">
            <xs:simpleType>
                <xs:restriction base="xs:boolean" />
            </xs:simpleType>
        </xs:attribute>
        <xs:attribute name="displayName" use="required">
            <xs:simpleType>
                <xs:restriction base="xs:boolean" />
            </xs:simpleType>
        </xs:attribute>
    </xs:complexType>

    <xs:complexType name="staffGroupStaffType">
        <xs:attribute name="partIDs" type="idReferenceListType" use="required" />
        <xs:attribute name="staff" type="xs:positiveInteger" default="1" />
    </xs:complexType>
    
    <!--::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::-->
    <!-- Simple Types -->

    <xs:simpleType name="noteValueType">
        <xs:annotation>
            <xs:documentation>
                An integer string that is
                an optional '1' character
                followed by a compulsory "/" character,
                followed by one of the strings "8L", "4L", "2L", "1", "2", "4", "8", "16", "32", "64", "128", "256", "512", "1024"
                (See MusicXML's note-value-type, that extends from maxima to 1024th note.)
                Issue: I have decided to associate the strings "8L" "4L" and "2L" with maxima, long and breve respectively,
                so as to differentiate them from eighth-, quarter- and half-notes. Is that okay? (see also multipleNoteValueType)
            </xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:token">
            <xs:pattern value="(1)?/(8L|4L|2L|1|2|4|8|16|32|64|128|256|512|1024)(d*)"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="multipleNoteValueType">
        <xs:annotation>
            <xs:documentation>
                An integer string that does not begin with 0, but that has an unlimited number of digits,
                followed by a noteValueType. (Issue: see noteValueType)
            </xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:token">
            <xs:pattern value="([1-9][0-9]*)/(8L|4L|2L|1|2|4|8|16|32|64|128|256|512|1024)"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="simpleLocationType">
        <xs:annotation>
            <xs:documentation>
                An optional (measure number followed by a ':' character) followed by
                EITHER
                { a decimal floating-point number indicating the positive number of whole-notes after the start of the measure }
                OR
                { a multipleNoteValueType (2/4, 3/8, 4/2 6/1d etc.}
                Issue: I think it would be better if the _measure_ component was _relative_ to the measure in which this
                simpleLocation is defined. (Not absolute as defined in the Draft Spec.) That would keep the numbers down, and
                be easier to check. For example: 1:2/4 would always mean 2 quarter-notes after the beginning of the following measure.
                It would also be possible to have negative measure components: -2:3/8 would mean 3 eighth-notes after the beginning
                of two measures earlier. This also solves the problem of "measure indices starting at 1"...
            </xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:token">
            <xs:pattern value="(([1-9][0-9]*):)?(([0-9]*\.)?([0-9]*)|([1-9][0-9]*)?/(8L|4L|2L|1|2|4|8|16|32|64|128|256|512|1024)(d*))"/>
        </xs:restriction>
    </xs:simpleType>
    
    <xs:simpleType name="locationType">
        <xs:annotation>
            <xs:documentation>
                EITHER an idReferenceType OR a simpleLocationType.
            </xs:documentation>
        </xs:annotation>
        <xs:union memberTypes="idReferenceType simpleLocationType" />
    </xs:simpleType>
    
    <xs:simpleType name="incomingOutgoingType">
        <xs:annotation>
            <xs:documentation>
                a component of the slurLocationType
            </xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:token">
            <xs:pattern value="incoming|outgoing"/>
        </xs:restriction>
    </xs:simpleType>
    
    <xs:simpleType name="slurLocationType">
        <xs:annotation>
            <xs:documentation>
                the value of the slur.location attribute:
                EITHER a locationType OR an incomingOutgoingType
            </xs:documentation>
        </xs:annotation>
        <xs:union memberTypes="locationType incomingOutgoingType" />
    </xs:simpleType>    

    <xs:simpleType name="locationsListType">
        <xs:annotation>
            <xs:documentation>
                A string containing a list of locationTypes separated by whitespace.
                This is the value of the part/measure/sequence/beams/beam/events attribute.
            </xs:documentation>
        </xs:annotation>
        <xs:list itemType="locationType" />       
    </xs:simpleType>

    <xs:simpleType name="idReferenceListType">
        <xs:annotation>
            <xs:documentation>
                A string containing a list of idReferenceTypes separated by whitespace.
            </xs:documentation>
        </xs:annotation>
        <xs:list itemType="idReferenceType" />
    </xs:simpleType>

    <xs:simpleType name="idValueType">
        <xs:annotation>
            <xs:documentation>
                All ID attributes are of this form. It is defined here as:
                A string beginning with a character in range [a-z] or [A-Z]
                followed by an arbitrary number of characters from [a-z], [A-Z], [0-9], '-' (minus), or '_' (underscore).
            </xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:token">
            <xs:pattern value="[a-zA-Z][a-zA-Z0-9\-_]*" />
        </xs:restriction>
    </xs:simpleType>
        
    <xs:simpleType name="idReferenceType">
        <xs:annotation>
            <xs:documentation>
                All ID references are of this form. It is defined here as:
                A string beginning with a '#' character
                followed by an idValueType
            </xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:token">
            <xs:pattern value="[#][a-zA-Z][a-zA-Z0-9\-_]*" />
        </xs:restriction>
    </xs:simpleType>
    
</xs:schema>
